const binarySearch = require('./index')

describe("Find key with binary search", () => {
    test('Случай успешного поиска', () => {
        expect(binarySearch([1,2,3],2)).toEqual(1);
    })
    test('Случай ввода не отсортированого массива', () => {
        expect(binarySearch([2,0,1],2)).toEqual([[0,1,2],2]);
    })
    test('Случай ввода одинаковых элементов', () => {
        expect(binarySearch([2,2,2,2],2)).toEqual(1);
    })
    test('Случай ввода символов', () => {
        expect(binarySearch([2,2,'a'],2)).toEqual(1);
    })
    test('Случай поиска символов', () => {
        expect(binarySearch([2,'a',2],"a")).toEqual('Программа не ищет символы');
    })
    test('Случай отсутчвия нужного элемента', () => {
        expect(binarySearch([1,2],4)).toEqual("Данного элемента нет в массиве");
    })
    test('Случай поиска большого значения', () => {
        expect(binarySearch([2,2,1e20],1e20)).toEqual("Параментры не могут принимать значение более 10000 или менее -10000");
    })
    test('Случай поиска отрицательного значения', () => {
        expect(binarySearch([-278,-122,33,100,2222],-278)).toEqual(0);
    })
    test('Случай поиска значения с плавающей запятой', () => {
        expect(binarySearch([-122,-12,0,0.2,22],0.2)).toEqual(3);
    })
    test('Случай если нужный элемент находится слева', () => {
        expect(binarySearch([-122,-12,0,0.2,22],-122)).toEqual(0);
    })
    test('Случай если нужный элемент находится справо', () => {
        expect(binarySearch([-122,-12,0,0.2,22],22)).toEqual(4);
    })
    test('Случай если нужный элемент находится в центре', () => {
        expect(binarySearch([-122,-12,0,0.2,22],0)).toEqual(2);
    })
    test('Случай если в списке нечётное кол-во элементов и нужный элемент в центре справа', () => {
        expect(binarySearch([-122,-12,0,0.2,1,22],0.2)).toEqual(3);
    })
test('Случай если в списке нечётное кол-во элементов и нужный элемент в центре слева', () => {
        expect(binarySearch([-122,-12,0,0.2,1,22],0)).toEqual(2);
    })

})